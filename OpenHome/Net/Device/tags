!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Action	DviService.cpp	/^OpenHome::Net::Action* DvAction::Action()$/;"	f	class:DvAction
Action	DviService.cpp	/^const OpenHome::Net::Action* DvAction::Action() const$/;"	f	class:DvAction
Adapter	DviService.cpp	/^TIpAddress DviInvocation::Adapter() const$/;"	f	class:DviInvocation
Add	DviDevice.cpp	/^void DviDeviceMap::Add(DviDevice& aDevice)$/;"	f	class:DviDeviceMap
Add	DviPropertyUpdateCollection.cpp	/^void PropertyUpdate::Add(const Brx& aName, WriterBwh& aValue)$/;"	f	class:PropertyUpdate
Add	DviPropertyUpdateCollection.cpp	/^void PropertyUpdate::Add(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyUpdate
AddAction	DviService.cpp	/^void DviService::AddAction(Action* aAction, FunctorDviInvocation aFunctor)$/;"	f	class:DviService
AddDevice	DvServerUpnp.cpp	/^void DvServerUpnp::AddDevice(DvDevice& aDevice)$/;"	f	class:DvServerUpnp
AddDevice	DviDevice.cpp	/^void DviDevice::AddDevice(DviDevice* aDevice)$/;"	f	class:DviDevice
AddProperty	DviService.cpp	/^void DviService::AddProperty(Property* aProperty)$/;"	f	class:DviService
AddProtocol	DviDevice.cpp	/^void DviDevice::AddProtocol(IDvProtocol* aProtocol)$/;"	f	class:DviDevice
AddRef	DviService.cpp	/^void DviService::AddRef()$/;"	f	class:DviService
AddRef	DviSubscription.cpp	/^void DviSubscription::AddRef()$/;"	f	class:DviSubscription
AddServer	DviServer.cpp	/^void DviServer::AddServer(NetworkAdapter& aNif)$/;"	f	class:DviServer
AddService	DviDevice.cpp	/^void DviDevice::AddService(DviService* aService)$/;"	f	class:DviDevice
AddSubscription	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::AddSubscription(const Brx& aClientId, DviSubscription* aSubscription)$/;"	f	class:DviPropertyUpdateCollection
AddSubscription	DviPropertyUpdateCollection.cpp	/^void PropertyUpdatesFlattened::AddSubscription(DviSubscription* aSubscription)$/;"	f	class:PropertyUpdatesFlattened
AddSubscription	DviService.cpp	/^void DviService::AddSubscription(DviSubscription* aSubscription)$/;"	f	class:DviService
AddSubscription	DviSubscription.cpp	/^void DviSubscriptionManager::AddSubscription(DviSubscription& aSubscription)$/;"	f	class:DviSubscriptionManager
AddWeakRef	DviDevice.cpp	/^void DviDevice::AddWeakRef()$/;"	f	class:DviDevice
Attribute	DviDevice.cpp	/^AttributeMap::Attribute::Attribute(const TChar* aKey, const TChar* aValue)$/;"	f	class:AttributeMap::Attribute
Attribute	DviDevice.h	/^    class Attribute$/;"	c	class:OpenHome::Net::AttributeMap
AttributeMap	DviDevice.cpp	/^AttributeMap::AttributeMap()$/;"	f	class:AttributeMap
AttributeMap	DviDevice.h	/^class AttributeMap$/;"	c	namespace:OpenHome::Net
AutoFunctor	DviService.cpp	/^AutoFunctor::AutoFunctor(Functor aFunctor)$/;"	f	class:AutoFunctor
AutoFunctor	DviService.cpp	/^class AutoFunctor$/;"	c	namespace:OpenHome::Net	file:
AutoGetPropertyUpdatesComplete	DviProviderSubscriptionLongPoll.cpp	/^DviProviderSubscriptionLongPoll::AutoGetPropertyUpdatesComplete::AutoGetPropertyUpdatesComplete(DviProviderSubscriptionLongPoll& aLongPoll)$/;"	f	class:DviProviderSubscriptionLongPoll::AutoGetPropertyUpdatesComplete
AutoGetPropertyUpdatesComplete	DviProviderSubscriptionLongPoll.h	/^    class AutoGetPropertyUpdatesComplete : private INonCopyable$/;"	c	class:OpenHome::Net::DviProviderSubscriptionLongPoll
AutoPropertiesLock	DviSubscription.cpp	/^AutoPropertiesLock::AutoPropertiesLock(DviService& aService)$/;"	f	class:AutoPropertiesLock
AutoPropertiesLock	DviSubscription.cpp	/^class AutoPropertiesLock : INonCopyable$/;"	c	file:
BootId	DviStack.cpp	/^TUint DvStack::BootId()$/;"	f	class:DvStack
Callback	FunctorDviInvocation.h	/^    typedef TAny (*Callback)();$/;"	t	class:OpenHome::Net::FunctorDviInvocation
CheckFirst	DviService.cpp	/^void DviInvocationResponseBinary::CheckFirst()$/;"	f	class:DviInvocationResponseBinary
CheckFirst	DviService.cpp	/^void DviInvocationResponseString::CheckFirst()$/;"	f	class:DviInvocationResponseString
ChildHasService	DviDevice.cpp	/^TBool DviDevice::ChildHasService(const OpenHome::Net::ServiceType& aServiceType) const$/;"	f	class:DviDevice
Clear	DviProviderSubscriptionLongPoll.h	/^        void Clear() { iSem = NULL; }$/;"	f	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
ClientEndpoint	DviService.cpp	/^Endpoint DviInvocation::ClientEndpoint() const$/;"	f	class:DviInvocation
ClientId	DviPropertyUpdateCollection.cpp	/^const Brx& PropertyUpdatesFlattened::ClientId() const$/;"	f	class:PropertyUpdatesFlattened
ConfigChanged	DviDevice.cpp	/^void DviDevice::ConfigChanged()$/;"	f	class:DviDevice
ConfigId	DviDevice.cpp	/^TUint DviDevice::ConfigId()$/;"	f	class:DviDevice
Construct	DviDevice.cpp	/^void DviDevice::Construct(const Brx& aUdn)$/;"	f	class:DviDevice
Construct	DviDevice.cpp	/^void DviDeviceStandard::Construct()$/;"	f	class:DviDeviceStandard
ContainsSubscription	DviPropertyUpdateCollection.cpp	/^TBool PropertyUpdatesFlattened::ContainsSubscription(const Brx& aSid) const$/;"	f	class:PropertyUpdatesFlattened
CopyMap	DviDevice.cpp	/^std::map<Brn,DviDevice*,BufferCmp> DviDeviceMap::CopyMap() const$/;"	f	class:DviDeviceMap
CreateSid	DviDevice.cpp	/^void DviDevice::CreateSid(Brh& aSid)$/;"	f	class:DviDevice
CreateWriter	DviPropertyUpdateCollection.cpp	/^IPropertyWriter* DviPropertyUpdateCollection::CreateWriter(const IDviSubscriptionUserData* \/*aUserData*\/, const Brx& aSid, TUint aSequenceNumber)$/;"	f	class:DviPropertyUpdateCollection
CreateWriter	DviSubscription.cpp	/^IPropertyWriter* DviSubscription::CreateWriter()$/;"	f	class:DviSubscription
Destroy	DviDevice.cpp	/^void DviDevice::Destroy()$/;"	f	class:DviDevice
Device	DvDevice.cpp	/^DviDevice& DvDevice::Device()$/;"	f	class:DvDevice
Device	DviDevice.cpp	/^DviDevice& DviDevice::Device(TUint aIndex) const$/;"	f	class:DviDevice
DeviceCount	DviDevice.cpp	/^TUint DviDevice::DeviceCount() const$/;"	f	class:DviDevice
DeviceMap	DviStack.cpp	/^DviDeviceMap& DvStack::DeviceMap()$/;"	f	class:DvStack
Disable	DviService.cpp	/^void DviService::Disable()$/;"	f	class:DviService
DisableComplete	DviDevice.cpp	/^void DviDevice::DisableComplete()$/;"	f	class:DviDevice
DoRenew	DviSubscription.cpp	/^void DviSubscription::DoRenew(TUint& aSeconds)$/;"	f	class:DviSubscription
DvAction	DviService.cpp	/^DvAction::DvAction(OpenHome::Net::Action* aAction, FunctorDviInvocation aFunctor)$/;"	f	class:DvAction
DvAction	DviService.h	/^class DvAction$/;"	c	namespace:OpenHome::Net
DvActions	DviService.cpp	/^const std::vector<DvAction>& DviService::DvActions() const$/;"	f	class:DviService
DvDevice	DvDevice.cpp	/^DvDevice::DvDevice()$/;"	f	class:DvDevice
DvDevice	DvDevice.cpp	/^DvDevice::DvDevice(DvStack& aDvStack, const Brx& aUdn)$/;"	f	class:DvDevice
DvDevice	DvDevice.h	/^class DllExportClass DvDevice$/;"	c	namespace:OpenHome::Net
DvDeviceStandard	DvDevice.cpp	/^DvDeviceStandard::DvDeviceStandard(DvStack& aDvStack, const Brx& aUdn)$/;"	f	class:DvDeviceStandard
DvDeviceStandard	DvDevice.cpp	/^DvDeviceStandard::DvDeviceStandard(DvStack& aDvStack, const Brx& aUdn, IResourceManager& aResourceManager)$/;"	f	class:DvDeviceStandard
DvDeviceStandard	DvDevice.h	/^class DvDeviceStandard : public DvDevice$/;"	c	namespace:OpenHome::Net
DvProvider	DvProvider.cpp	/^DvProvider::DvProvider(DviDevice& aDevice, const TChar* aDomain, const TChar* aType, TUint aVersion)$/;"	f	class:DvProvider
DvProvider	DvProvider.h	/^class DllExportClass DvProvider : protected INonCopyable$/;"	c	namespace:OpenHome::Net
DvServerUpnp	DvServerUpnp.cpp	/^DvServerUpnp::DvServerUpnp(DvStack& aDvStack)$/;"	f	class:DvServerUpnp
DvServerUpnp	DvServerUpnp.h	/^class DvServerUpnp$/;"	c	namespace:OpenHome::Net
DvStack	DviStack.cpp	/^DvStack::DvStack(OpenHome::Environment& aEnv)$/;"	f	class:DvStack
DvStack	DviStack.h	/^class DvStack : private IStack, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviDevice	DviDevice.cpp	/^DviDevice::DviDevice(OpenHome::Net::DvStack& aDvStack, const Brx& aUdn)$/;"	f	class:DviDevice
DviDevice	DviDevice.cpp	/^DviDevice::DviDevice(OpenHome::Net::DvStack& aDvStack, const Brx& aUdn, IResourceManager& aResourceManager)$/;"	f	class:DviDevice
DviDevice	DviDevice.h	/^class DviDevice : public IResourceManager, private IStackObject$/;"	c	namespace:OpenHome::Net
DviDeviceMap	DviDevice.cpp	/^DviDeviceMap::DviDeviceMap()$/;"	f	class:DviDeviceMap
DviDeviceMap	DviDevice.h	/^class DviDeviceMap : public IResourceManager$/;"	c	namespace:OpenHome::Net
DviDeviceStandard	DviDevice.cpp	/^DviDeviceStandard::DviDeviceStandard(OpenHome::Net::DvStack& aDvStack, const Brx& aUdn)$/;"	f	class:DviDeviceStandard
DviDeviceStandard	DviDevice.cpp	/^DviDeviceStandard::DviDeviceStandard(OpenHome::Net::DvStack& aDvStack, const Brx& aUdn, IResourceManager& aResourceManager)$/;"	f	class:DviDeviceStandard
DviDeviceStandard	DviDevice.h	/^class DviDeviceStandard : public DviDevice$/;"	c	namespace:OpenHome::Net
DviInvocation	DviService.cpp	/^DviInvocation::DviInvocation(IDviInvocation& aInvocation)$/;"	f	class:DviInvocation
DviInvocation	DviService.h	/^class DllExportClass DviInvocation : public IDvInvocation, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviInvocationResponseBinary	DviService.cpp	/^DviInvocationResponseBinary::DviInvocationResponseBinary(IDviInvocation& aInvocation, const TChar* aName)$/;"	f	class:DviInvocationResponseBinary
DviInvocationResponseBinary	DviService.h	/^class DllExportClass DviInvocationResponseBinary : public IDvInvocationResponseBinary, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviInvocationResponseBool	DviService.cpp	/^DviInvocationResponseBool::DviInvocationResponseBool(IDviInvocation& aInvocation, const TChar* aName)$/;"	f	class:DviInvocationResponseBool
DviInvocationResponseBool	DviService.h	/^class DllExportClass DviInvocationResponseBool : public IDvInvocationResponseBool, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviInvocationResponseInt	DviService.cpp	/^DviInvocationResponseInt::DviInvocationResponseInt(IDviInvocation& aInvocation, const TChar* aName)$/;"	f	class:DviInvocationResponseInt
DviInvocationResponseInt	DviService.h	/^class DllExportClass DviInvocationResponseInt : public IDvInvocationResponseInt, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviInvocationResponseString	DviService.cpp	/^DviInvocationResponseString::DviInvocationResponseString(IDviInvocation& aInvocation, const TChar* aName)$/;"	f	class:DviInvocationResponseString
DviInvocationResponseString	DviService.h	/^class DllExportClass DviInvocationResponseString : public IDvInvocationResponseString, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviInvocationResponseUint	DviService.cpp	/^DviInvocationResponseUint::DviInvocationResponseUint(IDviInvocation& aInvocation, const TChar* aName)$/;"	f	class:DviInvocationResponseUint
DviInvocationResponseUint	DviService.h	/^class DllExportClass DviInvocationResponseUint : public IDvInvocationResponseUint, private INonCopyable$/;"	c	namespace:OpenHome::Net
DviPropertyUpdateCollection	DviPropertyUpdateCollection.cpp	/^DviPropertyUpdateCollection::DviPropertyUpdateCollection(DvStack& aDvStack)$/;"	f	class:DviPropertyUpdateCollection
DviPropertyUpdateCollection	DviPropertyUpdateCollection.h	/^class DviPropertyUpdateCollection : public IPropertyWriterFactory, private IPropertyUpdateMerger$/;"	c	namespace:OpenHome::Net
DviProviderSubscriptionLongPoll	DviProviderSubscriptionLongPoll.cpp	/^DviProviderSubscriptionLongPoll::DviProviderSubscriptionLongPoll(DviDevice& aDevice)$/;"	f	class:DviProviderSubscriptionLongPoll
DviProviderSubscriptionLongPoll	DviProviderSubscriptionLongPoll.h	/^class DviProviderSubscriptionLongPoll : public DvProviderOpenhomeOrgSubscriptionLongPoll1$/;"	c	namespace:OpenHome::Net
DviServer	DviServer.cpp	/^DviServer::DviServer(DvStack& aDvStack)$/;"	f	class:DviServer
DviServer	DviServer.h	/^class DviServer$/;"	c	namespace:OpenHome::Net
DviService	DviService.cpp	/^DviService::DviService(DvStack& aDvStack, const TChar* aDomain, const TChar* aName, TUint aVersion)$/;"	f	class:DviService
DviService	DviService.h	/^class DviService : public Service, private IStackObject$/;"	c	namespace:OpenHome::Net
DviSubscription	DviSubscription.cpp	/^DviSubscription::DviSubscription(DvStack& aDvStack, DviDevice& aDevice, IPropertyWriterFactory& aWriterFactory,$/;"	f	class:DviSubscription
DviSubscription	DviSubscription.h	/^class DviSubscription : private IStackObject$/;"	c	namespace:OpenHome::Net
DviSubscriptionManager	DviSubscription.cpp	/^DviSubscriptionManager::DviSubscriptionManager(DvStack& aDvStack)$/;"	f	class:DviSubscriptionManager
DviSubscriptionManager	DviSubscription.h	/^class DviSubscriptionManager : public Thread$/;"	c	namespace:OpenHome::Net
EEnableState	DviDevice.h	/^    enum EEnableState$/;"	g	class:OpenHome::Net::DviDevice
Enable	DviService.cpp	/^void DviService::Enable()$/;"	f	class:DviService
Enabled	DvDevice.cpp	/^TBool DvDevice::Enabled() const$/;"	f	class:DvDevice
Enabled	DviDevice.cpp	/^TBool DviDevice::Enabled() const$/;"	f	class:DviDevice
EndGetPropertyUpdates	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::EndGetPropertyUpdates()$/;"	f	class:DviProviderSubscriptionLongPoll
EndResponse	DviService.cpp	/^void DviInvocation::EndResponse()$/;"	f	class:DviInvocation
Env	DviStack.h	/^    Environment& Env() { return iEnv; }$/;"	f	class:OpenHome::Net::DvStack
Error	DviService.cpp	/^void DviInvocation::Error(TInt aCode, const Brx& aReason)$/;"	f	class:DviInvocation
Error	DviSubscription.cpp	/^void Publisher::Error(const TChar* aErr)$/;"	f	class:Publisher
Expired	DviSubscription.cpp	/^void DviSubscription::Expired()$/;"	f	class:DviSubscription
Find	DviDevice.cpp	/^DviDevice* DviDeviceMap::Find(const Brx& aUdn)$/;"	f	class:DviDeviceMap
Find	DviSubscription.cpp	/^DviSubscription* DviSubscriptionManager::Find(const Brx& aSid)$/;"	f	class:DviSubscriptionManager
FindByClientId	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened* DviPropertyUpdateCollection::FindByClientId(const Brx& aClientId)$/;"	f	class:DviPropertyUpdateCollection
FindByClientId	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened* DviPropertyUpdateCollection::FindByClientId(const Brx& aClientId, TUint& aIndex)$/;"	f	class:DviPropertyUpdateCollection
FindBySid	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened* DviPropertyUpdateCollection::FindBySid(const Brx& aSid)$/;"	f	class:DviPropertyUpdateCollection
FindBySid	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened* DviPropertyUpdateCollection::FindBySid(const Brx& aSid, TUint& aIndex)$/;"	f	class:DviPropertyUpdateCollection
FindInterface	DviServer.cpp	/^TInt DviServer::FindInterface(TIpAddress aInterface, const std::vector<NetworkAdapter*>& aNifList)$/;"	f	class:DviServer
FindServer	DviServer.cpp	/^TInt DviServer::FindServer(TIpAddress aSubnet)$/;"	f	class:DviServer
FunctionTranslatorDviInvocation	FunctorDviInvocation.h	/^    FunctionTranslatorDviInvocation(void* aPtr, OhNetFunctorDviInvocation aCallback) :$/;"	f	class:OpenHome::Net::FunctionTranslatorDviInvocation
FunctionTranslatorDviInvocation	FunctorDviInvocation.h	/^class FunctionTranslatorDviInvocation : public FunctorDviInvocation$/;"	c	namespace:OpenHome::Net
Functor	DviService.cpp	/^FunctorDviInvocation DvAction::Functor() const$/;"	f	class:DvAction
FunctorDviInvocation	FunctorDviInvocation.h	/^    FunctorDviInvocation() : iCallback(NULL), iObject(NULL) {}$/;"	f	class:OpenHome::Net::FunctorDviInvocation
FunctorDviInvocation	FunctorDviInvocation.h	/^    FunctorDviInvocation(Thunk aT, const TAny* aObject, OhNetFunctorDviInvocation aCallback)$/;"	f	class:OpenHome::Net::FunctorDviInvocation
FunctorDviInvocation	FunctorDviInvocation.h	/^    FunctorDviInvocation(Thunk aT, const TAny* aObject, const TAny* aCallback, TUint aBytes)$/;"	f	class:OpenHome::Net::FunctorDviInvocation
FunctorDviInvocation	FunctorDviInvocation.h	/^class FunctorDviInvocation$/;"	c	namespace:OpenHome::Net
Get	DviDevice.cpp	/^const TChar* AttributeMap::Get(const TChar* aKey) const$/;"	f	class:AttributeMap
GetAttribute	DvDevice.cpp	/^void DvDevice::GetAttribute(const TChar* aKey, const TChar** aValue) const$/;"	f	class:DvDevice
GetAttribute	DviDevice.cpp	/^void DviDevice::GetAttribute(const TChar* aKey, const TChar** aValue) const$/;"	f	class:DviDevice
GetDvStack	DviDevice.cpp	/^DvStack& DviDevice::GetDvStack()$/;"	f	class:DviDevice
GetPropertyUpdates	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::GetPropertyUpdates(IDvInvocation& aInvocation, const Brx& aClientId, IDvInvocationResponseString& aUpdates)$/;"	f	class:DviProviderSubscriptionLongPoll
GetResourceManagerUri	DvDevice.cpp	/^void DvDeviceStandard::GetResourceManagerUri(const NetworkAdapter& aAdapter, Brh& aUri)$/;"	f	class:DvDeviceStandard
GetResourceManagerUri	DviDevice.cpp	/^void DviDevice::GetResourceManagerUri(const NetworkAdapter& aAdapter, Brh& aUri)$/;"	f	class:DviDevice
GetUriBase	DviDevice.cpp	/^void DviDevice::GetUriBase(Bwx& aUriBase, TIpAddress aInterface, TUint aPort, IDvProtocol& aProtocol)$/;"	f	class:DviDevice
HEADER_DVDEVICE	DvDevice.h	2;"	d
HEADER_DVIDEVICE	DviDevice.h	2;"	d
HEADER_DVISERVICE	DviService.h	2;"	d
HEADER_DVISUBSCRIPTION	DviSubscription.h	2;"	d
HEADER_DVI_PROPERTY_UPDATE_COLLECTION	DviPropertyUpdateCollection.h	2;"	d
HEADER_DVI_PROVIDER_SUBSCRIPTION_LONGPOLL	DviProviderSubscriptionLongPoll.h	2;"	d
HEADER_DVI_SERVER	DviServer.h	2;"	d
HEADER_DVI_STACK	DviStack.h	8;"	d
HEADER_DVRESOURCEWRITER	DvResourceWriter.h	2;"	d
HEADER_DVSERVERUPNP	DvServerUpnp.h	2;"	d
HEADER_DVSERVICE	DvProvider.h	2;"	d
HEADER_DV_INVOCATION_RESPONSE	DvInvocationResponse.h	2;"	d
HEADER_IFACE_DVIINVOCATION	FunctorDviInvocation.h	2;"	d
HEADER_OHNET_DEVICE_CORE	DvStack.h	2;"	d
HasService	DviDevice.cpp	/^TBool DviDevice::HasService(const OpenHome::Net::ServiceType& aServiceType) const$/;"	f	class:DviDevice
IDvInvocation	DvInvocationResponse.h	/^class IDvInvocation$/;"	c	namespace:OpenHome::Net
IDvInvocationResponseBinary	DvInvocationResponse.h	/^class IDvInvocationResponseBinary : public IWriter$/;"	c	namespace:OpenHome::Net
IDvInvocationResponseBool	DvInvocationResponse.h	/^class IDvInvocationResponseBool$/;"	c	namespace:OpenHome::Net
IDvInvocationResponseInt	DvInvocationResponse.h	/^class IDvInvocationResponseInt$/;"	c	namespace:OpenHome::Net
IDvInvocationResponseString	DvInvocationResponse.h	/^class IDvInvocationResponseString : public IWriter$/;"	c	namespace:OpenHome::Net
IDvInvocationResponseUint	DvInvocationResponse.h	/^class IDvInvocationResponseUint$/;"	c	namespace:OpenHome::Net
IDvProtocol	DviDevice.h	/^class IDvProtocol : public IResourceManager$/;"	c	namespace:OpenHome::Net
IDviInvocation	DviService.h	/^class IDviInvocation$/;"	c	namespace:OpenHome::Net
IDviSubscriptionUserData	DviSubscription.h	/^class IDviSubscriptionUserData$/;"	c	namespace:OpenHome::Net
IPropertyUpdateMerger	DviPropertyUpdateCollection.h	/^class IPropertyUpdateMerger$/;"	c	namespace:OpenHome::Net
IPropertyWriterFactory	DviSubscription.h	/^class IPropertyWriterFactory$/;"	c	namespace:OpenHome::Net
IResourceManager	DvDevice.h	/^class IResourceManager$/;"	c	namespace:OpenHome::Net
IResourceWriter	DvResourceWriter.h	/^class IResourceWriter$/;"	c	namespace:OpenHome::Net
Initialise	DviServer.cpp	/^void DviServer::Initialise()$/;"	f	class:DviServer
Interface	DviServer.h	/^        TIpAddress Interface() const { return iNif.Address(); }$/;"	f	class:OpenHome::Net::DviServer::Server
InvocationCompleted	DviService.cpp	/^void DviService::InvocationCompleted()$/;"	f	class:DviService
Invoke	DviService.cpp	/^void DviService::Invoke(IDviInvocation& aInvocation, const Brx& aActionName)$/;"	f	class:DviService
IsEmpty	DviPropertyUpdateCollection.cpp	/^TBool PropertyUpdatesFlattened::IsEmpty() const$/;"	f	class:PropertyUpdatesFlattened
IsFree	DviProviderSubscriptionLongPoll.h	/^        TBool IsFree() const { return (iSem == NULL); }$/;"	f	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
IsRoot	DviDevice.cpp	/^TBool DviDevice::IsRoot() const$/;"	f	class:DviDevice
Key	DviDevice.cpp	/^Brn AttributeMap::Attribute::Key() const$/;"	f	class:AttributeMap::Attribute
ListObjectDetails	DviDevice.cpp	/^void DviDevice::ListObjectDetails() const$/;"	f	class:DviDevice
ListObjectDetails	DviService.cpp	/^void DviService::ListObjectDetails() const$/;"	f	class:DviService
ListObjectDetails	DviSubscription.cpp	/^void DviSubscription::ListObjectDetails() const$/;"	f	class:DviSubscription
LpecServer	DviStack.cpp	/^DviServerLpec& DvStack::LpecServer()$/;"	f	class:DvStack
MakeFunctorDviInvocation	FunctorDviInvocation.h	/^MakeFunctorDviInvocation(Object& aC, void(CallType::* const &aF)(IDviInvocation&))$/;"	f	namespace:OpenHome::Net
MakeFunctorDviInvocation	FunctorDviInvocation.h	/^MakeFunctorDviInvocation(void* aPtr, OhNetFunctorDviInvocation aCallback)$/;"	f	namespace:OpenHome::Net
Map	DviDevice.h	/^    typedef std::map<Brn,Attribute*,BufferCmp> Map;$/;"	t	class:OpenHome::Net::AttributeMap
Map	DviDevice.h	/^    typedef std::map<Brn,DviDevice*,BufferCmp> Map;$/;"	t	class:OpenHome::Net::DviDeviceMap
Map	DviSubscription.h	/^    typedef std::map<Brn,DviSubscription*,BufferCmp> Map;$/;"	t	class:OpenHome::Net::DviSubscriptionManager
MdnsProvider	DviStack.cpp	/^IMdnsProvider* DvStack::MdnsProvider()$/;"	f	class:DvStack
MemberFunction	FunctorDviInvocation.h	/^    typedef TAny (FunctorDviInvocation::*MemberFunction)();$/;"	t	class:OpenHome::Net::FunctorDviInvocation
MemberTranslatorDviInvocation	FunctorDviInvocation.h	/^    MemberTranslatorDviInvocation(Object& aC, const MemFunc& aM) :$/;"	f	class:OpenHome::Net::MemberTranslatorDviInvocation
MemberTranslatorDviInvocation	FunctorDviInvocation.h	/^class MemberTranslatorDviInvocation : public FunctorDviInvocation$/;"	c	namespace:OpenHome::Net
Merge	DviPropertyUpdateCollection.cpp	/^void PropertyUpdate::Merge(PropertyUpdate& aPropertyUpdate)$/;"	f	class:PropertyUpdate
MergeUpdate	DviPropertyUpdateCollection.cpp	/^PropertyUpdate* DviPropertyUpdateCollection::MergeUpdate(PropertyUpdate* aUpdate)$/;"	f	class:DviPropertyUpdateCollection
MergeUpdate	DviPropertyUpdateCollection.cpp	/^PropertyUpdate* PropertyUpdatesFlattened::MergeUpdate(PropertyUpdate* aUpdate)$/;"	f	class:PropertyUpdatesFlattened
Name	DviPropertyUpdateCollection.cpp	/^const Brx& PropertyUpdate::Property::Name() const$/;"	f	class:PropertyUpdate::Property
Net	DvDevice.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DvInvocationResponse.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DvProvider.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DvResourceWriter.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DvServerUpnp.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviDevice.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviPropertyUpdateCollection.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviProviderSubscriptionLongPoll.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviServer.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviService.cpp	/^namespace Net {$/;"	n	namespace:OpenHome	file:
Net	DviService.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviStack.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	DviSubscription.h	/^namespace Net {$/;"	n	namespace:OpenHome
Net	FunctorDviInvocation.h	/^namespace Net {$/;"	n	namespace:OpenHome
NextBootId	DviStack.cpp	/^TUint DvStack::NextBootId()$/;"	f	class:DvStack
NotifySubscriptionCreated	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::NotifySubscriptionCreated(const Brx& \/*aSid*\/)$/;"	f	class:DviPropertyUpdateCollection
NotifySubscriptionDeleted	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::NotifySubscriptionDeleted(const Brx& \/*aSid*\/)$/;"	f	class:DviPropertyUpdateCollection
NotifySubscriptionExpired	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::NotifySubscriptionExpired(const Brx& aSid)$/;"	f	class:DviPropertyUpdateCollection
OhNetFunctorDviInvocation	FunctorDviInvocation.h	/^typedef void (STDCALL *OhNetFunctorDviInvocation)(void* aPtr, IDviInvocation* aInvocation);$/;"	t	namespace:OpenHome::Net
OpenHome	DvDevice.h	/^namespace OpenHome {$/;"	n
OpenHome	DvInvocationResponse.h	/^namespace OpenHome {$/;"	n
OpenHome	DvProvider.h	/^namespace OpenHome {$/;"	n
OpenHome	DvResourceWriter.h	/^namespace OpenHome {$/;"	n
OpenHome	DvServerUpnp.h	/^namespace OpenHome {$/;"	n
OpenHome	DviDevice.h	/^namespace OpenHome {$/;"	n
OpenHome	DviPropertyUpdateCollection.h	/^namespace OpenHome {$/;"	n
OpenHome	DviProviderSubscriptionLongPoll.h	/^namespace OpenHome {$/;"	n
OpenHome	DviServer.h	/^namespace OpenHome {$/;"	n
OpenHome	DviService.cpp	/^namespace OpenHome {$/;"	n	file:
OpenHome	DviService.h	/^namespace OpenHome {$/;"	n
OpenHome	DviStack.h	/^namespace OpenHome {$/;"	n
OpenHome	DviSubscription.h	/^namespace OpenHome {$/;"	n
OpenHome	FunctorDviInvocation.h	/^namespace OpenHome {$/;"	n
Port	DviServer.cpp	/^TUint DviServer::Port(TIpAddress aInterface)$/;"	f	class:DviServer
Port	DviServer.h	/^        TUint Port() const { return iServer->Port(); }$/;"	f	class:OpenHome::Net::DviServer::Server
Properties	DviService.cpp	/^const std::vector<Property*>& DviService::Properties() const$/;"	f	class:DviService
PropertiesInitialised	DviService.cpp	/^TBool DviService::PropertiesInitialised() const$/;"	f	class:DviService
PropertiesLock	DvProvider.cpp	/^void DvProvider::PropertiesLock()$/;"	f	class:DvProvider
PropertiesLock	DviService.cpp	/^void DviService::PropertiesLock()$/;"	f	class:DviService
PropertiesUnlock	DvProvider.cpp	/^void DvProvider::PropertiesUnlock()$/;"	f	class:DvProvider
PropertiesUnlock	DviService.cpp	/^void DviService::PropertiesUnlock()$/;"	f	class:DviService
Property	DviPropertyUpdateCollection.cpp	/^PropertyUpdate::Property::Property(const Brx& aName, WriterBwh& aValue)$/;"	f	class:PropertyUpdate::Property
Property	DviPropertyUpdateCollection.cpp	/^PropertyUpdate::Property::Property(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyUpdate::Property
Property	DviPropertyUpdateCollection.h	/^    class Property$/;"	c	class:OpenHome::Net::PropertyUpdate
PropertyUpdate	DviPropertyUpdateCollection.cpp	/^PropertyUpdate::PropertyUpdate(const Brx& aSid, TUint aSeqNum)$/;"	f	class:PropertyUpdate
PropertyUpdate	DviPropertyUpdateCollection.h	/^class PropertyUpdate$/;"	c	namespace:OpenHome::Net
PropertyUpdateCollection	DviStack.cpp	/^DviPropertyUpdateCollection& DvStack::PropertyUpdateCollection()$/;"	f	class:DvStack
PropertyUpdatesFlattened	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened::PropertyUpdatesFlattened(const Brx& aClientId)$/;"	f	class:PropertyUpdatesFlattened
PropertyUpdatesFlattened	DviPropertyUpdateCollection.h	/^class PropertyUpdatesFlattened$/;"	c	namespace:OpenHome::Net
PropertyWriteBinary	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteBinary(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter2
PropertyWriteBinary	DviSubscription.cpp	/^void PropertyWriter::PropertyWriteBinary(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter
PropertyWriteBool	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteBool(const Brx& aName, TBool aValue)$/;"	f	class:PropertyWriter2
PropertyWriteBool	DviSubscription.cpp	/^void PropertyWriter::PropertyWriteBool(const Brx& aName, TBool aValue)$/;"	f	class:PropertyWriter
PropertyWriteEnd	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteEnd()$/;"	f	class:PropertyWriter2
PropertyWriteInt	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteInt(const Brx& aName, TInt aValue)$/;"	f	class:PropertyWriter2
PropertyWriteInt	DviSubscription.cpp	/^void PropertyWriter::PropertyWriteInt(const Brx& aName, TInt aValue)$/;"	f	class:PropertyWriter
PropertyWriteString	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteString(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter2
PropertyWriteString	DviSubscription.cpp	/^void PropertyWriter::PropertyWriteString(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter
PropertyWriteUint	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::PropertyWriteUint(const Brx& aName, TUint aValue)$/;"	f	class:PropertyWriter2
PropertyWriteUint	DviSubscription.cpp	/^void PropertyWriter::PropertyWriteUint(const Brx& aName, TUint aValue)$/;"	f	class:PropertyWriter
PropertyWriter	DviSubscription.cpp	/^PropertyWriter::PropertyWriter()$/;"	f	class:PropertyWriter
PropertyWriter	DviSubscription.h	/^class PropertyWriter : public IPropertyWriter$/;"	c	namespace:OpenHome::Net
PropertyWriter2	DviPropertyUpdateCollection.cpp	/^PropertyWriter2::PropertyWriter2(IPropertyUpdateMerger& aMerger, const Brx& aSid, TUint aSeqNum)$/;"	f	class:PropertyWriter2
PropertyWriter2	DviPropertyUpdateCollection.h	/^class PropertyWriter2 : public IPropertyWriter, private INonCopyable$/;"	c	namespace:OpenHome::Net
ProtocolDisabled	DviDevice.cpp	/^void DviDevice::ProtocolDisabled()$/;"	f	class:DviDevice
Publish	DviSubscription.cpp	/^void Publisher::Publish(DviSubscription* aSubscription)$/;"	f	class:Publisher
PublishPropertyUpdates	DviService.cpp	/^void DviService::PublishPropertyUpdates()$/;"	f	class:DviService
Publisher	DviSubscription.cpp	/^Publisher::Publisher(const TChar* aName, Fifo<Publisher*>& aFree)$/;"	f	class:Publisher
Publisher	DviSubscription.h	/^class Publisher : public Thread$/;"	c	namespace:OpenHome::Net
QueueUpdate	DviSubscription.cpp	/^void DviSubscriptionManager::QueueUpdate(DviSubscription& aSubscription)$/;"	f	class:DviSubscriptionManager
Release	DviPropertyUpdateCollection.cpp	/^void PropertyWriter2::Release()$/;"	f	class:PropertyWriter2
Release	DviSubscription.cpp	/^void PropertyWriter::Release()$/;"	f	class:PropertyWriter
Remove	DviDevice.cpp	/^void DviDeviceMap::Remove(DviDevice& aDevice)$/;"	f	class:DviDeviceMap
Remove	DviSubscription.cpp	/^void DviSubscription::Remove()$/;"	f	class:DviSubscription
RemoveRef	DviService.cpp	/^void DviService::RemoveRef()$/;"	f	class:DviService
RemoveRef	DviSubscription.cpp	/^void DviSubscription::RemoveRef()$/;"	f	class:DviSubscription
RemoveSubscription	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::RemoveSubscription(const Brx& aSid)$/;"	f	class:DviPropertyUpdateCollection
RemoveSubscription	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::RemoveSubscription(const Brx& aSid, TBool aExpired)$/;"	f	class:DviPropertyUpdateCollection
RemoveSubscription	DviPropertyUpdateCollection.cpp	/^void PropertyUpdatesFlattened::RemoveSubscription(const Brx& aSid, TBool aExpired)$/;"	f	class:PropertyUpdatesFlattened
RemoveSubscription	DviService.cpp	/^void DviService::RemoveSubscription(const Brx& aSid)$/;"	f	class:DviService
RemoveSubscription	DviSubscription.cpp	/^void DviSubscriptionManager::RemoveSubscription(DviSubscription& aSubscription)$/;"	f	class:DviSubscriptionManager
RemoveWeakRef	DviDevice.cpp	/^void DviDevice::RemoveWeakRef()$/;"	f	class:DviDevice
Renew	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::Renew(IDvInvocation& aInvocation, const Brx& aSid, TUint aRequestedDuration, IDvInvocationResponseUint& aDuration)$/;"	f	class:DviProviderSubscriptionLongPoll
Renew	DviSubscription.cpp	/^void DviSubscription::Renew(TUint& aSeconds)$/;"	f	class:DviSubscription
ResourceManager	DviDevice.cpp	/^IResourceManager* DviDevice::ResourceManager()$/;"	f	class:DviDevice
ResourceUriPrefix	DviService.cpp	/^const char* DviInvocation::ResourceUriPrefix() const$/;"	f	class:DviInvocation
Root	DviDevice.cpp	/^DviDevice* DviDevice::Root() const$/;"	f	class:DviDevice
Run	DviSubscription.cpp	/^void DviSubscriptionManager::Run()$/;"	f	class:DviSubscriptionManager
Run	DviSubscription.cpp	/^void Publisher::Run()$/;"	f	class:Publisher
SeqNum	DviPropertyUpdateCollection.cpp	/^TUint PropertyUpdate::SeqNum() const$/;"	f	class:PropertyUpdate
Server	DviServer.cpp	/^DviServer::Server::Server(SocketTcpServer* aTcpServer, NetworkAdapter& aNif)$/;"	f	class:DviServer::Server
Server	DviServer.h	/^    class Server : private INonCopyable$/;"	c	class:OpenHome::Net::DviServer
ServerUpnp	DviStack.cpp	/^DviServerUpnp& DvStack::ServerUpnp()$/;"	f	class:DvStack
Service	DviDevice.cpp	/^DviService& DviDevice::Service(TUint aIndex) const$/;"	f	class:DviDevice
ServiceCount	DviDevice.cpp	/^TUint DviDevice::ServiceCount() const$/;"	f	class:DviDevice
ServiceReference	DviDevice.cpp	/^DviService* DviDevice::ServiceReference(const ServiceType& aServiceType)$/;"	f	class:DviDevice
Set	DviDevice.cpp	/^void AttributeMap::Set(const TChar* aKey, const TChar* aValue)$/;"	f	class:AttributeMap
Set	DviProviderSubscriptionLongPoll.h	/^        void Set(Semaphore& aSem) { iSem = &aSem; }$/;"	f	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
SetAttribute	DvDevice.cpp	/^void DvDevice::SetAttribute(const TChar* aKey, const TChar* aValue)$/;"	f	class:DvDevice
SetAttribute	DviDevice.cpp	/^void DviDevice::SetAttribute(const TChar* aKey, const TChar* aValue)$/;"	f	class:DviDevice
SetClientSignal	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::SetClientSignal(const Brx& aClientId, Semaphore* aSem)$/;"	f	class:DviPropertyUpdateCollection
SetClientSignal	DviPropertyUpdateCollection.cpp	/^void PropertyUpdatesFlattened::SetClientSignal(Semaphore* aSem)$/;"	f	class:PropertyUpdatesFlattened
SetCustomData	DviDevice.cpp	/^void DviDevice::SetCustomData(const TChar* aProtocol, const TChar* aTag, void* aData)$/;"	f	class:DviDevice
SetDisabled	DvDevice.cpp	/^void DvDevice::SetDisabled(Functor aCompleted)$/;"	f	class:DvDevice
SetDisabled	DviDevice.cpp	/^void DviDevice::SetDisabled(Functor aCompleted)$/;"	f	class:DviDevice
SetDisabled	DviDevice.cpp	/^void DviDevice::SetDisabled(Functor aCompleted, bool aLocked)$/;"	f	class:DviDevice
SetDuration	DviSubscription.cpp	/^void DviSubscription::SetDuration(TUint& aDurationSecs)$/;"	f	class:DviSubscription
SetEnabled	DvDevice.cpp	/^void DvDevice::SetEnabled()$/;"	f	class:DvDevice
SetEnabled	DviDevice.cpp	/^void DviDevice::SetEnabled()$/;"	f	class:DviDevice
SetParent	DviDevice.cpp	/^void DviDevice::SetParent(DviDevice* aParent)$/;"	f	class:DviDevice
SetPropertyBinary	DvProvider.cpp	/^bool DvProvider::SetPropertyBinary(PropertyBinary& aProperty, const Brx& aValue)$/;"	f	class:DvProvider
SetPropertyBool	DvProvider.cpp	/^bool DvProvider::SetPropertyBool(PropertyBool& aProperty, TBool aValue)$/;"	f	class:DvProvider
SetPropertyInt	DvProvider.cpp	/^bool DvProvider::SetPropertyInt(PropertyInt& aProperty, TInt aValue)$/;"	f	class:DvProvider
SetPropertyString	DvProvider.cpp	/^bool DvProvider::SetPropertyString(PropertyString& aProperty, const Brx& aValue)$/;"	f	class:DvProvider
SetPropertyUint	DvProvider.cpp	/^bool DvProvider::SetPropertyUint(PropertyUint& aProperty, TUint aValue)$/;"	f	class:DvProvider
SetWriter	DviSubscription.cpp	/^void PropertyWriter::SetWriter(IWriter& aWriter)$/;"	f	class:PropertyWriter
Sid	DviPropertyUpdateCollection.cpp	/^const Brx& PropertyUpdate::Sid() const$/;"	f	class:PropertyUpdate
Sid	DviSubscription.cpp	/^const Brx& DviSubscription::Sid() const$/;"	f	class:DviSubscription
Signal	DviProviderSubscriptionLongPoll.h	/^        void Signal() { if (iSem != NULL) iSem->Signal(); }$/;"	f	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
SsdpNotifierManager	DviStack.cpp	/^DviSsdpNotifierManager& DvStack::SsdpNotifierManager()$/;"	f	class:DvStack
Start	DviSubscription.cpp	/^void DviSubscription::Start(DviService& aService)$/;"	f	class:DviSubscription
StartGetPropertyUpdates	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::StartGetPropertyUpdates(IDvInvocation& aInvocation)$/;"	f	class:DviProviderSubscriptionLongPoll
StartResponse	DviService.cpp	/^void DviInvocation::StartResponse()$/;"	f	class:DviInvocation
Stop	DviSubscription.cpp	/^void DviSubscription::Stop()$/;"	f	class:DviSubscription
StopSubscriptions	DviService.cpp	/^void DviService::StopSubscriptions()$/;"	f	class:DviService
Subnet	DviServer.h	/^        TIpAddress Subnet() const { return iNif.Subnet(); }$/;"	f	class:OpenHome::Net::DviServer::Server
SubnetListChanged	DviServer.cpp	/^void DviServer::SubnetListChanged()$/;"	f	class:DviServer
Subscribe	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::Subscribe(IDvInvocation& aInvocation, const Brx& aClientId, const Brx& aUdn, const Brx& aService, TUint aRequestedDuration,$/;"	f	class:DviProviderSubscriptionLongPoll
SubscriptionId	DviDevice.cpp	/^TUint DviDevice::SubscriptionId()$/;"	f	class:DviDevice
SubscriptionManager	DviStack.cpp	/^DviSubscriptionManager& DvStack::SubscriptionManager()$/;"	f	class:DvStack
SubscriptionMap	DviPropertyUpdateCollection.h	/^    typedef std::map<Brn,DviSubscription*,BufferCmp> SubscriptionMap;$/;"	t	class:OpenHome::Net::PropertyUpdatesFlattened
Thunk	FunctorDviInvocation.h	/^    static void Thunk(const FunctorDviInvocation& aFb, IDviInvocation& aInvocation)$/;"	f	class:OpenHome::Net::FunctionTranslatorDviInvocation
Thunk	FunctorDviInvocation.h	/^    static void Thunk(const FunctorDviInvocation& aFb, IDviInvocation& aInvocation)$/;"	f	class:OpenHome::Net::MemberTranslatorDviInvocation
Thunk	FunctorDviInvocation.h	/^    typedef void (*Thunk)(const FunctorDviInvocation&, IDviInvocation&);$/;"	t	class:OpenHome::Net::FunctorDviInvocation
TransferValueTo	DviPropertyUpdateCollection.cpp	/^void PropertyUpdate::Property::TransferValueTo(Property& aDest)$/;"	f	class:PropertyUpdate::Property
TryAddRef	DviSubscription.cpp	/^TBool DviSubscription::TryAddRef()$/;"	f	class:DviSubscription
TryPublishUpdate	DvProvider.cpp	/^void DvProvider::TryPublishUpdate()$/;"	f	class:DvProvider
Udn	DvDevice.cpp	/^const Brx& DvDevice::Udn() const$/;"	f	class:DvDevice
Udn	DviDevice.cpp	/^const Brx& DviDevice::Udn() const$/;"	f	class:DviDevice
Unsubscribe	DviProviderSubscriptionLongPoll.cpp	/^void DviProviderSubscriptionLongPoll::Unsubscribe(IDvInvocation& aInvocation, const Brx& aSid)$/;"	f	class:DviProviderSubscriptionLongPoll
UpdateBootId	DviStack.cpp	/^void DvStack::UpdateBootId()$/;"	f	class:DvStack
UpdateReadySignal	DviProviderSubscriptionLongPoll.h	/^        UpdateReadySignal() : iSem(NULL) {}$/;"	f	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
UpdateReadySignal	DviProviderSubscriptionLongPoll.h	/^    class UpdateReadySignal$/;"	c	class:OpenHome::Net::DviProviderSubscriptionLongPoll
UpdateValue	DviDevice.cpp	/^void AttributeMap::Attribute::UpdateValue(const TChar* aValue)$/;"	f	class:AttributeMap::Attribute
UpdatesMap	DviPropertyUpdateCollection.h	/^    typedef std::map<Brn,PropertyUpdate*,BufferCmp> UpdatesMap;$/;"	t	class:OpenHome::Net::PropertyUpdatesFlattened
Value	DviDevice.cpp	/^const TChar* AttributeMap::Attribute::Value() const$/;"	f	class:AttributeMap::Attribute
Value	DviPropertyUpdateCollection.cpp	/^const Brx& PropertyUpdate::Property::Value() const$/;"	f	class:PropertyUpdate::Property
Version	DviService.cpp	/^TUint DviInvocation::Version() const$/;"	f	class:DviInvocation
Write	DviPropertyUpdateCollection.cpp	/^void PropertyUpdate::Write(IWriter& aWriter)$/;"	f	class:PropertyUpdate
Write	DviService.cpp	/^void DviInvocationResponseBinary::Write(TByte aValue)$/;"	f	class:DviInvocationResponseBinary
Write	DviService.cpp	/^void DviInvocationResponseBinary::Write(const Brx& aValue)$/;"	f	class:DviInvocationResponseBinary
Write	DviService.cpp	/^void DviInvocationResponseBool::Write(TBool aValue)$/;"	f	class:DviInvocationResponseBool
Write	DviService.cpp	/^void DviInvocationResponseInt::Write(TInt aValue)$/;"	f	class:DviInvocationResponseInt
Write	DviService.cpp	/^void DviInvocationResponseString::Write(TByte aValue)$/;"	f	class:DviInvocationResponseString
Write	DviService.cpp	/^void DviInvocationResponseString::Write(const Brx& aValue)$/;"	f	class:DviInvocationResponseString
Write	DviService.cpp	/^void DviInvocationResponseUint::Write(TUint aValue)$/;"	f	class:DviInvocationResponseUint
WriteChanges	DviSubscription.cpp	/^void DviSubscription::WriteChanges()$/;"	f	class:DviSubscription
WriteFlush	DviService.cpp	/^void DviInvocationResponseBinary::WriteFlush()$/;"	f	class:DviInvocationResponseBinary
WriteFlush	DviService.cpp	/^void DviInvocationResponseString::WriteFlush()$/;"	f	class:DviInvocationResponseString
WriteResource	DviDevice.cpp	/^void DviDevice::WriteResource(const Brx& aUriTail, TIpAddress aInterface, std::vector<char*>& aLanguageList, IResourceWriter& aResourceWriter)$/;"	f	class:DviDevice
WriteResource	DviDevice.cpp	/^void DviDeviceMap::WriteResource(const Brx& aUriTail, TIpAddress aInterface, std::vector<char*>& aLanguageList, IResourceWriter& aResourceWriter)$/;"	f	class:DviDeviceMap
WriteTag	DviPropertyUpdateCollection.cpp	/^static void WriteTag(IWriter& aWriter, const Brx& aTag, const Brx& aValue)$/;"	f	file:
WriteUpdates	DviPropertyUpdateCollection.cpp	/^void DviPropertyUpdateCollection::WriteUpdates(const Brx& aClientId, IWriter& aWriter)$/;"	f	class:DviPropertyUpdateCollection
WriteUpdates	DviPropertyUpdateCollection.cpp	/^void PropertyUpdatesFlattened::WriteUpdates(IWriter& aWriter)$/;"	f	class:PropertyUpdatesFlattened
WriteVariable	DviSubscription.cpp	/^void PropertyWriter::WriteVariable(IWriter& aWriter, const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter
WriteVariable	DviSubscription.cpp	/^void PropertyWriter::WriteVariable(const Brx& aName, const Brx& aValue)$/;"	f	class:PropertyWriter
eDisabled	DviDevice.h	/^        eDisabled$/;"	e	enum:OpenHome::Net::DviDevice::EEnableState
eDisabling	DviDevice.h	/^       ,eDisabling$/;"	e	enum:OpenHome::Net::DviDevice::EEnableState
eEnabled	DviDevice.h	/^       ,eEnabled$/;"	e	enum:OpenHome::Net::DviDevice::EEnableState
iAction	DviService.h	/^    OpenHome::Net::Action* iAction;$/;"	m	class:OpenHome::Net::DvAction
iBootId	DviStack.h	/^    TUint iBootId;$/;"	m	class:OpenHome::Net::DvStack
iCallback	FunctorDviInvocation.h	/^        OhNetFunctorDviInvocation iCallback;$/;"	m	union:OpenHome::Net::FunctorDviInvocation::__anon1
iCallbackMember	FunctorDviInvocation.h	/^        TByte iCallbackMember[kFudgeFactor * sizeof(MemberFunction)];$/;"	m	union:OpenHome::Net::FunctorDviInvocation::__anon1
iClientCount	DviProviderSubscriptionLongPoll.h	/^    TUint iClientCount;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iClientId	DviPropertyUpdateCollection.h	/^    Brh iClientId;$/;"	m	class:OpenHome::Net::PropertyUpdatesFlattened
iConfigId	DviDevice.h	/^    TUint iConfigId;$/;"	m	class:OpenHome::Net::DviDevice
iConfigUpdated	DviDevice.h	/^    TBool iConfigUpdated;$/;"	m	class:OpenHome::Net::DviDevice
iCurrentAdapterChangeListenerId	DviServer.h	/^    TInt iCurrentAdapterChangeListenerId;$/;"	m	class:OpenHome::Net::DviServer
iCurrentInvocationCount	DviService.h	/^    TUint iCurrentInvocationCount;$/;"	m	class:OpenHome::Net::DviService
iDelayPropertyUpdates	DvProvider.h	/^    TBool iDelayPropertyUpdates;$/;"	m	class:OpenHome::Net::DvProvider
iDevice	DvDevice.h	/^    DviDevice* iDevice;$/;"	m	class:OpenHome::Net::DvDevice
iDevice	DviSubscription.h	/^    DviDevice& iDevice;$/;"	m	class:OpenHome::Net::DviSubscription
iDevices	DviDevice.h	/^    std::vector<DviDevice*> iDevices;$/;"	m	class:OpenHome::Net::DviDevice
iDisableComplete	DviDevice.h	/^    Functor iDisableComplete;$/;"	m	class:OpenHome::Net::DviDevice
iDisabled	DviService.h	/^    TBool iDisabled;$/;"	m	class:OpenHome::Net::DviService
iDisabledSem	DviService.h	/^    Semaphore iDisabledSem;$/;"	m	class:OpenHome::Net::DviService
iDvActions	DviService.h	/^    std::vector<DvAction> iDvActions;$/;"	m	class:OpenHome::Net::DviService
iDvStack	DvProvider.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DvProvider
iDvStack	DviDevice.h	/^    OpenHome::Net::DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviDevice
iDvStack	DviPropertyUpdateCollection.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviPropertyUpdateCollection
iDvStack	DviProviderSubscriptionLongPoll.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iDvStack	DviServer.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviServer
iDvStack	DviService.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviService
iDvStack	DviSubscription.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviSubscription
iDvStack	DviSubscription.h	/^    DvStack& iDvStack;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iDviDeviceMap	DviStack.h	/^    DviDeviceMap* iDviDeviceMap;$/;"	m	class:OpenHome::Net::DvStack
iDviServerUpnp	DviStack.h	/^    DviServerUpnp* iDviServerUpnp;$/;"	m	class:OpenHome::Net::DvStack
iDviServerWebSocket	DviStack.h	/^    DviServerWebSocket* iDviServerWebSocket;$/;"	m	class:OpenHome::Net::DvStack
iEnabled	DviDevice.h	/^    EEnableState iEnabled;$/;"	m	class:OpenHome::Net::DviDevice
iEnv	DviStack.h	/^    OpenHome::Environment& iEnv;$/;"	m	class:OpenHome::Net::DvStack
iExit	DviProviderSubscriptionLongPoll.h	/^    TBool iExit;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iExpired	DviSubscription.h	/^    TBool iExpired;$/;"	m	class:OpenHome::Net::DviSubscription
iFirst	DviService.h	/^    TBool iFirst;$/;"	m	class:OpenHome::Net::DviInvocationResponseBinary
iFirst	DviService.h	/^    TBool iFirst;$/;"	m	class:OpenHome::Net::DviInvocationResponseString
iFree	DviSubscription.h	/^    Fifo<Publisher*> iFree;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iFree	DviSubscription.h	/^    Fifo<Publisher*>& iFree;$/;"	m	class:OpenHome::Net::Publisher
iFunctor	DviService.cpp	/^    Functor iFunctor;$/;"	m	class:OpenHome::Net::AutoFunctor	file:
iFunctor	DviService.h	/^    FunctorDviInvocation iFunctor;$/;"	m	class:OpenHome::Net::DvAction
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocation
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocationResponseBinary
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocationResponseBool
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocationResponseInt
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocationResponseString
iInvocation	DviService.h	/^    IDviInvocation& iInvocation;$/;"	m	class:OpenHome::Net::DviInvocationResponseUint
iKey	DviDevice.h	/^        Brh  iKey;$/;"	m	class:OpenHome::Net::AttributeMap::Attribute
iList	DviSubscription.h	/^    std::list<DviSubscription*> iList;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iLock	DviDevice.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviDeviceMap
iLock	DviDevice.h	/^    mutable Mutex iLock;$/;"	m	class:OpenHome::Net::AttributeMap
iLock	DviDevice.h	/^    mutable Mutex iLock;$/;"	m	class:OpenHome::Net::DviDevice
iLock	DviPropertyUpdateCollection.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviPropertyUpdateCollection
iLock	DviProviderSubscriptionLongPoll.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iLock	DviServer.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviServer
iLock	DviService.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviService
iLock	DviSubscription.h	/^    Mutex iLock;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iLock	DviSubscription.h	/^    mutable Mutex iLock;$/;"	m	class:OpenHome::Net::DviSubscription
iLongPoll	DviProviderSubscriptionLongPoll.h	/^        DviProviderSubscriptionLongPoll& iLongPoll;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll::AutoGetPropertyUpdatesComplete
iLpecServer	DviStack.h	/^    DviServerLpec* iLpecServer;$/;"	m	class:OpenHome::Net::DvStack
iMap	DviDevice.h	/^    Map iMap;$/;"	m	class:OpenHome::Net::AttributeMap
iMap	DviDevice.h	/^    Map iMap;$/;"	m	class:OpenHome::Net::DviDeviceMap
iMap	DviSubscription.h	/^    Map iMap;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iMaxClientCount	DviProviderSubscriptionLongPoll.h	/^    TUint iMaxClientCount;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iMdns	DviStack.h	/^    IMdnsProvider* iMdns;$/;"	m	class:OpenHome::Net::DvStack
iMerger	DviPropertyUpdateCollection.h	/^    IPropertyUpdateMerger& iMerger;$/;"	m	class:OpenHome::Net::PropertyWriter2
iName	DviPropertyUpdateCollection.h	/^        Brh iName;$/;"	m	class:OpenHome::Net::PropertyUpdate::Property
iName	DviService.h	/^    const TChar* iName;$/;"	m	class:OpenHome::Net::DviInvocationResponseBinary
iName	DviService.h	/^    const TChar* iName;$/;"	m	class:OpenHome::Net::DviInvocationResponseBool
iName	DviService.h	/^    const TChar* iName;$/;"	m	class:OpenHome::Net::DviInvocationResponseInt
iName	DviService.h	/^    const TChar* iName;$/;"	m	class:OpenHome::Net::DviInvocationResponseString
iName	DviService.h	/^    const TChar* iName;$/;"	m	class:OpenHome::Net::DviInvocationResponseUint
iNextBootId	DviStack.h	/^    TUint iNextBootId;$/;"	m	class:OpenHome::Net::DvStack
iNif	DviServer.h	/^        NetworkAdapter& iNif;$/;"	m	class:OpenHome::Net::DviServer::Server
iObject	FunctorDviInvocation.h	/^    TAny* iObject;$/;"	m	class:OpenHome::Net::FunctorDviInvocation
iParent	DviDevice.h	/^    DviDevice* iParent;$/;"	m	class:OpenHome::Net::DviDevice
iProperties	DviPropertyUpdateCollection.h	/^    std::vector<Property*> iProperties;$/;"	m	class:OpenHome::Net::PropertyUpdate
iProperties	DviService.h	/^    std::vector<Property*> iProperties;$/;"	m	class:OpenHome::Net::DviService
iPropertiesLock	DviService.h	/^    Mutex iPropertiesLock;$/;"	m	class:OpenHome::Net::DviService
iPropertyChanged	DvProvider.h	/^    TBool iPropertyChanged;$/;"	m	class:OpenHome::Net::DvProvider
iPropertySequenceNumbers	DviSubscription.h	/^    std::vector<TUint> iPropertySequenceNumbers;$/;"	m	class:OpenHome::Net::DviSubscription
iPropertyUpdate	DviPropertyUpdateCollection.h	/^    PropertyUpdate* iPropertyUpdate;$/;"	m	class:OpenHome::Net::PropertyWriter2
iPropertyUpdateCollection	DviProviderSubscriptionLongPoll.h	/^    DviPropertyUpdateCollection& iPropertyUpdateCollection;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iPropertyUpdateCollection	DviStack.h	/^    DviPropertyUpdateCollection* iPropertyUpdateCollection;$/;"	m	class:OpenHome::Net::DvStack
iProtocolDisableCount	DviDevice.h	/^    TUint iProtocolDisableCount;$/;"	m	class:OpenHome::Net::DviDevice
iProtocols	DviDevice.h	/^    std::vector<IDvProtocol*> iProtocols;$/;"	m	class:OpenHome::Net::DviDevice
iProviderSubscriptionLongPoll	DviDevice.h	/^    DviProviderSubscriptionLongPoll* iProviderSubscriptionLongPoll;$/;"	m	class:OpenHome::Net::DviDevice
iPublishers	DviSubscription.h	/^    Publisher** iPublishers;$/;"	m	class:OpenHome::Net::DviSubscriptionManager
iRefCount	DviDevice.h	/^    TUint iRefCount;$/;"	m	class:OpenHome::Net::DviDevice
iRefCount	DviService.h	/^    TUint iRefCount;$/;"	m	class:OpenHome::Net::DviService
iRefCount	DviSubscription.h	/^    TUint iRefCount;$/;"	m	class:OpenHome::Net::DviSubscription
iResourceManager	DviDevice.h	/^    IResourceManager* iResourceManager;$/;"	m	class:OpenHome::Net::DviDevice
iSem	DviPropertyUpdateCollection.h	/^    Semaphore* iSem;$/;"	m	class:OpenHome::Net::PropertyUpdatesFlattened
iSem	DviProviderSubscriptionLongPoll.h	/^        Semaphore* iSem;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll::UpdateReadySignal
iSeqNum	DviPropertyUpdateCollection.h	/^    TUint iSeqNum;$/;"	m	class:OpenHome::Net::PropertyUpdate
iSequenceNumber	DviSubscription.h	/^    TUint iSequenceNumber;$/;"	m	class:OpenHome::Net::DviSubscription
iServer	DvServerUpnp.h	/^    DviServerUpnp* iServer;$/;"	m	class:OpenHome::Net::DvServerUpnp
iServer	DviServer.h	/^        SocketTcpServer* iServer;$/;"	m	class:OpenHome::Net::DviServer::Server
iServers	DviServer.h	/^    std::vector<DviServer::Server*> iServers;$/;"	m	class:OpenHome::Net::DviServer
iService	DvProvider.h	/^    DviService* iService;$/;"	m	class:OpenHome::Net::DvProvider
iService	DviSubscription.cpp	/^    DviService& iService;$/;"	m	class:AutoPropertiesLock	file:
iService	DviSubscription.h	/^    DviService* iService;$/;"	m	class:OpenHome::Net::DviSubscription
iServiceLock	DviDevice.h	/^    Mutex iServiceLock;$/;"	m	class:OpenHome::Net::DviDevice
iServices	DviDevice.h	/^    std::vector<DviService*> iServices;$/;"	m	class:OpenHome::Net::DviDevice
iShutdown	DviProviderSubscriptionLongPoll.h	/^    Semaphore iShutdown;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iShutdownSem	DviDevice.h	/^    Semaphore iShutdownSem;$/;"	m	class:OpenHome::Net::DviDevice
iSid	DviPropertyUpdateCollection.h	/^    Brh iSid;$/;"	m	class:OpenHome::Net::PropertyUpdate
iSid	DviSubscription.h	/^    Brh iSid;$/;"	m	class:OpenHome::Net::DviSubscription
iSsdpNotifierManager	DviStack.h	/^    DviSsdpNotifierManager* iSsdpNotifierManager;$/;"	m	class:OpenHome::Net::DvStack
iSubnetListChangeListenerId	DviServer.h	/^    TInt iSubnetListChangeListenerId;$/;"	m	class:OpenHome::Net::DviServer
iSubscription	DviSubscription.h	/^    DviSubscription* iSubscription;$/;"	m	class:OpenHome::Net::Publisher
iSubscriptionId	DviDevice.h	/^    TUint iSubscriptionId;$/;"	m	class:OpenHome::Net::DviDevice
iSubscriptionManager	DviStack.h	/^    DviSubscriptionManager* iSubscriptionManager;$/;"	m	class:OpenHome::Net::DvStack
iSubscriptionMap	DviPropertyUpdateCollection.h	/^    SubscriptionMap iSubscriptionMap;$/;"	m	class:OpenHome::Net::PropertyUpdatesFlattened
iSubscriptions	DviService.h	/^    std::vector<DviSubscription*> iSubscriptions;$/;"	m	class:OpenHome::Net::DviService
iThunk	FunctorDviInvocation.h	/^    Thunk iThunk;$/;"	m	class:OpenHome::Net::FunctorDviInvocation
iTimer	DviSubscription.h	/^    Timer* iTimer;$/;"	m	class:OpenHome::Net::DviSubscription
iUdn	DviDevice.h	/^    Brhz iUdn;$/;"	m	class:OpenHome::Net::DviDevice
iUpdateReady	DviProviderSubscriptionLongPoll.h	/^    std::vector<UpdateReadySignal> iUpdateReady;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
iUpdates	DviPropertyUpdateCollection.h	/^    std::vector<PropertyUpdatesFlattened*> iUpdates;$/;"	m	class:OpenHome::Net::DviPropertyUpdateCollection
iUpdatesMap	DviPropertyUpdateCollection.h	/^    UpdatesMap iUpdatesMap;$/;"	m	class:OpenHome::Net::PropertyUpdatesFlattened
iUserData	DviSubscription.h	/^    IDviSubscriptionUserData* iUserData;$/;"	m	class:OpenHome::Net::DviSubscription
iValue	DviDevice.h	/^        Brhz iValue;$/;"	m	class:OpenHome::Net::AttributeMap::Attribute
iValue	DviPropertyUpdateCollection.h	/^        Brh iValue;$/;"	m	class:OpenHome::Net::PropertyUpdate::Property
iWriter	DviSubscription.h	/^    IWriter* iWriter;$/;"	m	class:OpenHome::Net::PropertyWriter
iWriterFactory	DviSubscription.h	/^    IPropertyWriterFactory& iWriterFactory;$/;"	m	class:OpenHome::Net::DviSubscription
kErrorCodeBadDevice	DviProviderSubscriptionLongPoll.h	/^    static const TUint kErrorCodeBadDevice = 810;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorCodeBadService	DviProviderSubscriptionLongPoll.h	/^    static const TUint kErrorCodeBadService = 811;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorCodeBadSubscription	DviProviderSubscriptionLongPoll.h	/^    static const TUint kErrorCodeBadSubscription = 812;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorCodeTooManyRequests	DviProviderSubscriptionLongPoll.h	/^    static const TUint kErrorCodeTooManyRequests = 813;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorDescBadDevice	DviProviderSubscriptionLongPoll.h	/^    static const Brn kErrorDescBadDevice;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorDescBadService	DviProviderSubscriptionLongPoll.h	/^    static const Brn kErrorDescBadService;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorDescBadSubscription	DviProviderSubscriptionLongPoll.h	/^    static const Brn kErrorDescBadSubscription;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kErrorDescTooManyRequests	DviProviderSubscriptionLongPoll.h	/^    static const Brn kErrorDescTooManyRequests;$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kFudgeFactor	FunctorDviInvocation.h	/^    static const TUint kFudgeFactor = 2;$/;"	m	class:OpenHome::Net::FunctorDviInvocation
kGetUpdatesMaxDelay	DviProviderSubscriptionLongPoll.h	/^    static const TUint kGetUpdatesMaxDelay = 30 * 1000; \/\/ 30 secs$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
kResourceDir	DviDevice.h	/^    static const Brn kResourceDir;$/;"	m	class:OpenHome::Net::DviDevice
kTimeoutLongPollSecs	DviProviderSubscriptionLongPoll.h	/^    static const TUint kTimeoutLongPollSecs = 5 * 60; \/\/ 5 mins$/;"	m	class:OpenHome::Net::DviProviderSubscriptionLongPoll
operator ()	FunctorDviInvocation.h	/^    void operator()(IDviInvocation& aInvocation) const { iThunk(*this, aInvocation); }$/;"	f	class:OpenHome::Net::FunctorDviInvocation
operator TBool	FunctorDviInvocation.h	/^    operator TBool() const { return (iObject!=NULL || iCallback!=NULL); }$/;"	f	class:OpenHome::Net::FunctorDviInvocation
~AttributeMap	DviDevice.cpp	/^AttributeMap::~AttributeMap()$/;"	f	class:AttributeMap
~AutoFunctor	DviService.cpp	/^AutoFunctor::~AutoFunctor()$/;"	f	class:AutoFunctor
~AutoGetPropertyUpdatesComplete	DviProviderSubscriptionLongPoll.cpp	/^DviProviderSubscriptionLongPoll::AutoGetPropertyUpdatesComplete::~AutoGetPropertyUpdatesComplete()$/;"	f	class:DviProviderSubscriptionLongPoll::AutoGetPropertyUpdatesComplete
~AutoPropertiesLock	DviSubscription.cpp	/^AutoPropertiesLock::~AutoPropertiesLock()$/;"	f	class:AutoPropertiesLock
~DvDevice	DvDevice.cpp	/^DvDevice::~DvDevice()$/;"	f	class:DvDevice
~DvProvider	DvProvider.cpp	/^DvProvider::~DvProvider()$/;"	f	class:DvProvider
~DvServerUpnp	DvServerUpnp.cpp	/^DvServerUpnp::~DvServerUpnp()$/;"	f	class:DvServerUpnp
~DvStack	DviStack.cpp	/^DvStack::~DvStack()$/;"	f	class:DvStack
~DviDevice	DviDevice.cpp	/^DviDevice::~DviDevice()$/;"	f	class:DviDevice
~DviDeviceMap	DviDevice.cpp	/^DviDeviceMap::~DviDeviceMap()$/;"	f	class:DviDeviceMap
~DviPropertyUpdateCollection	DviPropertyUpdateCollection.cpp	/^DviPropertyUpdateCollection::~DviPropertyUpdateCollection()$/;"	f	class:DviPropertyUpdateCollection
~DviProviderSubscriptionLongPoll	DviProviderSubscriptionLongPoll.cpp	/^DviProviderSubscriptionLongPoll::~DviProviderSubscriptionLongPoll()$/;"	f	class:DviProviderSubscriptionLongPoll
~DviServer	DviServer.cpp	/^DviServer::~DviServer()$/;"	f	class:DviServer
~DviService	DviService.cpp	/^DviService::~DviService()$/;"	f	class:DviService
~DviSubscription	DviSubscription.cpp	/^DviSubscription::~DviSubscription()$/;"	f	class:DviSubscription
~DviSubscriptionManager	DviSubscription.cpp	/^DviSubscriptionManager::~DviSubscriptionManager()$/;"	f	class:DviSubscriptionManager
~IDvInvocation	DvInvocationResponse.h	/^    virtual ~IDvInvocation() {}$/;"	f	class:OpenHome::Net::IDvInvocation
~IDvInvocationResponseBinary	DvInvocationResponse.h	/^    virtual ~IDvInvocationResponseBinary() {}$/;"	f	class:OpenHome::Net::IDvInvocationResponseBinary
~IDvInvocationResponseBool	DvInvocationResponse.h	/^    virtual ~IDvInvocationResponseBool() {}$/;"	f	class:OpenHome::Net::IDvInvocationResponseBool
~IDvInvocationResponseInt	DvInvocationResponse.h	/^    virtual ~IDvInvocationResponseInt() {}$/;"	f	class:OpenHome::Net::IDvInvocationResponseInt
~IDvInvocationResponseString	DvInvocationResponse.h	/^    virtual ~IDvInvocationResponseString() {}$/;"	f	class:OpenHome::Net::IDvInvocationResponseString
~IDvInvocationResponseUint	DvInvocationResponse.h	/^    virtual ~IDvInvocationResponseUint() {}$/;"	f	class:OpenHome::Net::IDvInvocationResponseUint
~IDviInvocation	DviService.h	/^    virtual ~IDviInvocation() {}$/;"	f	class:OpenHome::Net::IDviInvocation
~IDviSubscriptionUserData	DviSubscription.h	/^    virtual ~IDviSubscriptionUserData() {}$/;"	f	class:OpenHome::Net::IDviSubscriptionUserData
~IPropertyWriterFactory	DviSubscription.h	/^    virtual ~IPropertyWriterFactory() {}$/;"	f	class:OpenHome::Net::IPropertyWriterFactory
~IResourceManager	DvDevice.h	/^    virtual ~IResourceManager() {}$/;"	f	class:OpenHome::Net::IResourceManager
~IResourceWriter	DvResourceWriter.h	/^    virtual ~IResourceWriter() {}$/;"	f	class:OpenHome::Net::IResourceWriter
~PropertyUpdate	DviPropertyUpdateCollection.cpp	/^PropertyUpdate::~PropertyUpdate()$/;"	f	class:PropertyUpdate
~PropertyUpdatesFlattened	DviPropertyUpdateCollection.cpp	/^PropertyUpdatesFlattened::~PropertyUpdatesFlattened()$/;"	f	class:PropertyUpdatesFlattened
~PropertyWriter2	DviPropertyUpdateCollection.cpp	/^PropertyWriter2::~PropertyWriter2()$/;"	f	class:PropertyWriter2
~Publisher	DviSubscription.cpp	/^Publisher::~Publisher()$/;"	f	class:Publisher
~Server	DviServer.cpp	/^DviServer::Server::~Server()$/;"	f	class:DviServer::Server
